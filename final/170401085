#zakaria aljamous 170401085
import numpy as np


def RMSE(pred, target):
    err = np.subtract(target, pred)
    return (np.mean(err * 2)) * 0.5


# (1) Reading files, calculating RMSE and finding the polynomial that gives the lowest RMSE

# data file opens
f = open("veriler.txt")

# data will be read, if there any ampty lines it will get deleted 
data = f.readlines()
if "\n" in data: data.remove("\n")

# data are saved to y in numpy array form, starting from x 0
y = np.array(data, dtype=int)
x = np.array([i for i in range(len(y))], dtype=int)

## Over all data in a single polynomial fit passive.
RMSE_list = [0] * 6
poly_list = list()

for i in range(6):
    # ip : interpolasyon fonksiyonu
    poly = np.poly1d(np.polyfit(x, y, i + 1))
    # RMSE hesaplanir
    RMSE_list[i] = RMSE(poly(x), y)
    poly_list.append(poly)


# the polynomial which gives the best result is found, printed with RMSE
eniyi_derece = np.argmin(RMSE_list) + 1

# Polynomial (compatible with data) which gives the best result
poly = poly_list[eniyi_derece - 1]

# (2) Calculating and printing the area between detected A polynomial and B

# we must integrate the polynomial to find the real area under the polynomial
# The integral of x ^ n is x ^ (n + 1) / (n + 1)
in this way we are producing a new polynomial.
integral_poly_coeffs = [0] * (len(poly.coeffs) + 1)

for i in range(len(poly.coeffs)):
    integral_poly_coeffs[i] = poly.coeffs[i] / (len(poly.coeffs) - i)

integral_poly_coeffs[len(poly.coeffs)] = 0
integral_poly = np.poly1d(integral_poly_coeffs)
# print(integral_poly)

a = 4
b = len(y) - 1

# integral of polynomial (poly) from A (4) to b (end) 
AreaPoly = integral_poly(x[b]) - integral_poly(x[a])
print('Integral ile hesaplanan alan: {}'.format(AreaPoly))

# (3) Trapezoid without using polynomials (Trapezoidal). area calculation with integral calculation method

# Let's find the area with the trapezoid method:
AreaTrap = 0
for i in range(a, b):
    AreaTrap = AreaTrap + (poly(i) + poly(i+1)) / 2.0

print('Trapezoid (yamuk) yontemi ile hesaplanan alan: {}'.format(AreaTrap))
